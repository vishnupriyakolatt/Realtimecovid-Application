[{"/Users/bijish/projects/miniProject/frontend/src/index.js":"1","/Users/bijish/projects/miniProject/frontend/src/reportWebVitals.js":"2","/Users/bijish/projects/miniProject/frontend/src/App.js":"3","/Users/bijish/projects/miniProject/frontend/src/components/navbar/Navbar.js":"4","/Users/bijish/projects/miniProject/frontend/src/components/navbar/SidebarData.js":"5","/Users/bijish/projects/miniProject/frontend/src/context/maincontext.js":"6","/Users/bijish/projects/miniProject/frontend/src/pages/Home.js":"7","/Users/bijish/projects/miniProject/frontend/src/components/authUI/authForm.js":"8","/Users/bijish/projects/miniProject/frontend/src/adapters/auth.js":"9","/Users/bijish/projects/miniProject/frontend/src/adapters/axiosCalls.js":"10","/Users/bijish/projects/miniProject/frontend/src/general/HandleChanges.js":"11","/Users/bijish/projects/miniProject/frontend/src/pages/News.js":"12","/Users/bijish/projects/miniProject/frontend/src/components/news/NewsCard.js":"13","/Users/bijish/projects/miniProject/frontend/src/components/news/NewsGrid.js":"14","/Users/bijish/projects/miniProject/frontend/src/adapters/news.js":"15","/Users/bijish/projects/miniProject/frontend/src/pages/Statistics.js":"16","/Users/bijish/projects/miniProject/frontend/src/components/statistics/Statistic.js":"17","/Users/bijish/projects/miniProject/frontend/src/components/statistics/CountryPicker/CountryPicker.jsx":"18","/Users/bijish/projects/miniProject/frontend/src/adapters/fetchStatistics.js":"19","/Users/bijish/projects/miniProject/frontend/src/context/statiContext.js":"20","/Users/bijish/projects/miniProject/frontend/src/components/statistics/Cards/Cards.jsx":"21","/Users/bijish/projects/miniProject/frontend/src/components/statistics/Cards/Card/Card.jsx":"22","/Users/bijish/projects/miniProject/frontend/src/components/statistics/map/map.js":"23","/Users/bijish/projects/miniProject/frontend/src/pages/SymptomChecker.js":"24","/Users/bijish/projects/miniProject/frontend/src/components/statistics/map/ExtendedMarker.js":"25","/Users/bijish/projects/miniProject/frontend/src/components/statistics/Chart/Chart.jsx":"26","/Users/bijish/projects/miniProject/frontend/src/SubApp.js":"27","/Users/bijish/projects/miniProject/frontend/src/adapters/verifyToken.js":"28","/Users/bijish/projects/miniProject/frontend/src/adapters/location.js":"29","/Users/bijish/projects/miniProject/frontend/src/pages/ManagePatients.js":"30","/Users/bijish/projects/miniProject/frontend/src/adapters/managepatients.js":"31","/Users/bijish/projects/miniProject/frontend/src/pages/ManageInstitution.js":"32","/Users/bijish/projects/miniProject/frontend/src/adapters/manageinstitution.js":"33","/Users/bijish/projects/miniProject/frontend/src/pages/LandingPage.js":"34","/Users/bijish/projects/miniProject/frontend/src/components/protectedRoute/protected.route.js":"35","/Users/bijish/projects/miniProject/frontend/src/pages/NearbyInstitutions.js":"36","/Users/bijish/projects/miniProject/frontend/src/pages/ManageUsers.js":"37","/Users/bijish/projects/miniProject/frontend/src/adapters/manageusers.js":"38","/Users/bijish/projects/miniProject/frontend/src/pages/Profile.js":"39","/Users/bijish/projects/miniProject/frontend/src/pages/NearbyPatients.js":"40","/Users/bijish/projects/miniProject/frontend/src/pages/ManageContacts.js":"41","/Users/bijish/projects/miniProject/frontend/src/adapters/managecontacts.js":"42","/Users/bijish/projects/miniProject/frontend/src/pages/ManageNews.js":"43","/Users/bijish/projects/miniProject/frontend/src/pages/Patients.js":"44","/Users/bijish/projects/miniProject/frontend/src/pages/MedicalCentres.js":"45","/Users/bijish/projects/miniProject/frontend/src/pages/Contacts.js":"46","/Users/bijish/projects/miniProject/frontend/src/components/loader/Loader.js":"47"},{"size":478,"mtime":1609515266775,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":1609300301903,"results":"50","hashOfConfig":"49"},{"size":214,"mtime":1618125777156,"results":"51","hashOfConfig":"49"},{"size":4452,"mtime":1619198330706,"results":"52","hashOfConfig":"49"},{"size":2681,"mtime":1619286481758,"results":"53","hashOfConfig":"49"},{"size":1623,"mtime":1618729931825,"results":"54","hashOfConfig":"49"},{"size":7414,"mtime":1619286579859,"results":"55","hashOfConfig":"49"},{"size":3603,"mtime":1618725015382,"results":"56","hashOfConfig":"49"},{"size":613,"mtime":1617515722037,"results":"57","hashOfConfig":"49"},{"size":1199,"mtime":1617969480515,"results":"58","hashOfConfig":"49"},{"size":247,"mtime":1617872307913,"results":"59","hashOfConfig":"49"},{"size":165,"mtime":1617265201046,"results":"60","hashOfConfig":"49"},{"size":1609,"mtime":1617522471523,"results":"61","hashOfConfig":"49"},{"size":1251,"mtime":1619364032571,"results":"62","hashOfConfig":"49"},{"size":1438,"mtime":1619273942367,"results":"63","hashOfConfig":"49"},{"size":182,"mtime":1617899490091,"results":"64","hashOfConfig":"49"},{"size":765,"mtime":1619251776061,"results":"65","hashOfConfig":"49"},{"size":1403,"mtime":1617875781720,"results":"66","hashOfConfig":"49"},{"size":1860,"mtime":1619169705891,"results":"67","hashOfConfig":"49"},{"size":1216,"mtime":1617876864424,"results":"68","hashOfConfig":"49"},{"size":2980,"mtime":1619252759841,"results":"69","hashOfConfig":"49"},{"size":893,"mtime":1617622879063,"results":"70","hashOfConfig":"49"},{"size":3373,"mtime":1617879817191,"results":"71","hashOfConfig":"49"},{"size":14750,"mtime":1619345557257,"results":"72","hashOfConfig":"49"},{"size":301,"mtime":1617775600905,"results":"73","hashOfConfig":"49"},{"size":2551,"mtime":1617884770366,"results":"74","hashOfConfig":"49"},{"size":3716,"mtime":1619286618848,"results":"75","hashOfConfig":"49"},{"size":480,"mtime":1618493422354,"results":"76","hashOfConfig":"49"},{"size":2014,"mtime":1619169668246,"results":"77","hashOfConfig":"49"},{"size":6036,"mtime":1618765517136,"results":"78","hashOfConfig":"49"},{"size":2719,"mtime":1619272824179,"results":"79","hashOfConfig":"49"},{"size":6849,"mtime":1618766278888,"results":"80","hashOfConfig":"49"},{"size":1950,"mtime":1619274690297,"results":"81","hashOfConfig":"49"},{"size":180,"mtime":1618724114748,"results":"82","hashOfConfig":"49"},{"size":960,"mtime":1618730929955,"results":"83","hashOfConfig":"49"},{"size":3297,"mtime":1619364841769,"results":"84","hashOfConfig":"49"},{"size":2808,"mtime":1619195461766,"results":"85","hashOfConfig":"49"},{"size":792,"mtime":1619201437027,"results":"86","hashOfConfig":"49"},{"size":1814,"mtime":1619343982658,"results":"87","hashOfConfig":"49"},{"size":3049,"mtime":1619364872874,"results":"88","hashOfConfig":"49"},{"size":6243,"mtime":1619348223318,"results":"89","hashOfConfig":"49"},{"size":1239,"mtime":1619266719576,"results":"90","hashOfConfig":"49"},{"size":5970,"mtime":1619268126012,"results":"91","hashOfConfig":"49"},{"size":1423,"mtime":1619273164720,"results":"92","hashOfConfig":"49"},{"size":1606,"mtime":1619275025203,"results":"93","hashOfConfig":"49"},{"size":1637,"mtime":1619346780712,"results":"94","hashOfConfig":"49"},{"size":620,"mtime":1619346717639,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1c3r9gx",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"98"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"/Users/bijish/projects/miniProject/frontend/src/index.js",[],["208","209"],"/Users/bijish/projects/miniProject/frontend/src/reportWebVitals.js",[],"/Users/bijish/projects/miniProject/frontend/src/App.js",[],"/Users/bijish/projects/miniProject/frontend/src/components/navbar/Navbar.js",[],"/Users/bijish/projects/miniProject/frontend/src/components/navbar/SidebarData.js",["210"],"import React from 'react'\nimport { FaUsers, FaUserCircle } from \"react-icons/fa\";\nimport { AiFillHome } from 'react-icons/ai'\nimport { ImNewspaper } from \"react-icons/im\"\nimport { GoGraph, GoChecklist, GoSignOut } from \"react-icons/go\"\nimport { SiWhitesource } from \"react-icons/si\"\nimport { MdLocalHospital, MdPermContactCalendar } from \"react-icons/md\"\nimport { GiThermometerHot } from \"react-icons/gi\"\n\n\nexport const SidebarData = [\n    {\n        title: 'Home',\n        path: '/',\n        icon: <AiFillHome />,\n        cName: 'nav-text'\n    },\n\n    {\n        title: 'Statistics',\n        path: '/statistics',\n        icon: <GoGraph />,\n        cName: 'nav-text'\n    }, {\n        title: 'News',\n        path: '/news',\n        icon: <ImNewspaper />,\n        cName: 'nav-text'\n\n    }\n    // ,\n    // {\n    //     title: 'Symptom checker',\n    //     path: '/symptomchecker',\n    //     icon: <GoChecklist />,\n    //     cName: 'nav-text'\n\n    // }\n]\nexport const adminSideBarData = [{\n    title: 'Manage users',\n    path: '/manageusers',\n    icon: <FaUsers />,\n    cName: 'nav-text'\n\n},\n{\n    title: 'Manage news sources',\n    path: '/managenews',\n    icon: <SiWhitesource />,\n    cName: 'nav-text'\n\n},\n{\n    title: 'Manage contacts',\n    path: '/managecontacts',\n    icon: <MdPermContactCalendar />,\n    cName: 'nav-text'\n\n}, {\n    title: 'Medical centres',\n    path: '/institutions',\n    icon: <MdLocalHospital />,\n    cName: 'nav-text'\n\n}, {\n    title: 'Patients',\n    path: '/patients',\n    icon: <FaUsers />,\n    cName: 'nav-text'\n\n}]\nexport const healthSideBarData = [{\n    title: 'Manage patients',\n    path: '/managepatients',\n    icon: <FaUsers />,\n    cName: 'nav-text'\n\n},\n{\n    title: 'Manage Medical centres',\n    path: '/manageinstitution',\n    icon: <MdLocalHospital />,\n    cName: 'nav-text'\n\n},\n{\n    title: 'Contacts',\n    path: '/contacts',\n    icon: <MdPermContactCalendar />,\n    cName: 'nav-text'\n\n}]\nexport const patBscUsrSideBarData = [\n    {\n        title: 'Nearby Medical centres',\n        path: '/nearbyinstitutions',\n        icon: <MdLocalHospital />,\n        cName: 'nav-text'\n    },\n\n    {\n        title: 'Nearby patients',\n        path: '/nearbypatients',\n        icon: <GiThermometerHot />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Contacts',\n        path: '/contacts',\n        icon: <MdPermContactCalendar />,\n        cName: 'nav-text'\n\n    }\n]\nexport const Exceptional = {\n    logout: {\n        title: 'Logout',\n        path: '/signin',\n        icon: <GoSignOut />,\n        cName: 'nav-text'\n    },\n    profile: {\n        title: 'Profile',\n        path: '/profile',\n        icon: <FaUserCircle />,\n        cName: 'nav-text'\n\n    }\n\n}","/Users/bijish/projects/miniProject/frontend/src/context/maincontext.js",[],"/Users/bijish/projects/miniProject/frontend/src/pages/Home.js",["211","212"],"import React, { useContext } from 'react';\nimport { MainContext } from '../context/maincontext'\nimport covidCover from '../images/covidCover.png'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport SymptomChecker from './SymptomChecker';\n\n\nfunction Home() {\n    let { tokenVerified, username, isLogin } = useContext(MainContext)\n\n    if (tokenVerified === true || isLogin === true) {\n        return (\n\n            <div style={{\n                width: \"100%\"\n            }}>\n                <SymptomChecker />\n                <div style={{\n                    position: \"relative\",\n                    textAlign: \"center\",\n                }}>\n                    <img src={covidCover} style={{ width: \"100%\", objectFit: \"cover\", height: \"400px\" }} />\n                    <h2 style={{\n                        position: \"absolute\",\n                        bottom: \"0px\",\n                        left: \"10px\", backgroundColor: \"white\", padding: \"5px 25px 0px 25px\", fontSize: \"45px\", borderRadius: \"5px\"\n                    }}>Coronavirus</h2>\n                </div>\n                <div style={{\n                    position: \"relative\",\n                    textAlign: \"left\",\n                    width: \"890px\",\n                    marginTop: \"30px\",\n                    marginLeft: \"20px\",\n                    fontSize: \"20px\",\n                    lineHeight: \"1.6\"\n                }}><Tabs>\n                        <TabList>\n                            <Tab>Overview</Tab>\n                            <Tab>Prevention</Tab>\n                            <Tab>Symptoms</Tab>\n\n                        </TabList>\n\n                        <TabPanel>\n                            <p style={{ margin: \"15px 0 0 0px\" }}>Coronavirus disease (COVID-19) is an infectious disease caused by a newly discovered coronavirus.</p>\n                            <p style={{ margin: \"15px 0 0 0px\" }}>Most people infected with the COVID-19 virus will experience mild to moderate respiratory illness and recover without requiring special treatment.  Older people, and those with underlying medical problems like cardiovascular disease, diabetes, chronic respiratory disease, and cancer are more likely to develop serious illness.</p>\n                            <p style={{ margin: \"15px 0 0 0px\" }}>The best way to prevent and slow down transmission is to be well informed about the COVID-19 virus, the disease it causes and how it spreads. Protect yourself and others from infection by washing your hands or using an alcohol based rub frequently and not touching your face. </p>\n                            <p style={{ margin: \"15px 0 0 0px\" }}>The COVID-19 virus spreads primarily through droplets of saliva or discharge from the nose when an infected person coughs or sneezes, so it’s important that you also practice respiratory etiquette (for example, by coughing into a flexed elbow).</p>\n                        </TabPanel>\n                        <TabPanel>\n                            <p style={{ margin: \"15px 0 0 0px\" }}>\n                                To prevent infection and to slow transmission of COVID-19, do the following:\n                    <ul style={{ margin: \"10px 0 10px 25px\" }}>\n                                    <li>                        Wash your hands regularly with soap and water, or clean them with alcohol-based hand rub.\n                            </li>\n                                    <li>                         Maintain at least 1 metre distance between you and people coughing or sneezing.\n                            </li>\n                                    <li>                        Avoid touching your face.\n                            </li>\n                                    <li>                        Cover your mouth and nose when coughing or sneezing.\n                            </li>\n                                    <li>                        Stay home if you feel unwell.\n                            </li>\n                                    <li>                        Refrain from smoking and other activities that weaken the lungs.\n                            </li>\n                                    <li>                                               Practice physical distancing by avoiding unnecessary travel and staying away from large groups of people.\n\n                            </li>\n                                </ul>\n                            </p>\n\n\n\n                        </TabPanel>\n                        <TabPanel>\n                            <p style={{ margin: \"15px 0 0 0px\" }}>COVID-19 affects different people in different ways. Most infected people will develop mild to moderate illness and recover without hospitalization.</p>\n                            <p style={{ margin: \"10px 0 0 20px\" }}>\n                                Most common symptoms:\n                            <ul style={{ margin: \"10px 0 10px 20px\" }}>\n                                    <li>fever.</li>\n                                    <li> dry cough.</li>\n                                    <li>tiredness.</li>\n                                </ul>\n                            </p>\n                            <p style={{ margin: \"10px 0 0 20px\" }}>\n                                Less common symptoms:\n                            <ul style={{ margin: \"10px 0 10px 20px\" }}>\n                                    <li>aches and pains.</li>\n                                    <li> sore throat.</li>\n                                    <li>diarrhoea.</li>\n                                    <li>conjunctivitis.</li>\n                                    <li>loss of taste or smell.</li>\n                                    <li>a rash on skin, or discolouration of fingers or toes.</li>\n                                </ul>\n                            </p>\n                            <p style={{ margin: \"10px 0 0 20px\" }}>\n                                Serious symptoms:\n                            <ul style={{ margin: \"10px 0 10px 20px\" }}>\n                                    <li>difficulty breathing or shortness of breath.</li>\n                                    <li>chest pain or pressure.</li>\n                                    <li>loss of speech or movement.</li>\n                                    <li>loss of taste or smell.</li>\n                                    <li>a rash on skin, or discolouration of fingers or toes.</li>\n                                </ul>\n                            </p>\n                            <p style={{ margin: \"15px 0 0 0px\" }}> Seek immediate medical attention if you have serious symptoms.  Always call before visiting your doctor or health facility. </p>\n\n                            <p style={{ margin: \"15px 0 0 0px\" }}>People with mild symptoms who are otherwise healthy should manage their symptoms at home. </p>\n\n                            <p style={{ margin: \"15px 0 0 0px\" }}>On average it takes 5–6 days from when someone is infected with the virus for symptoms to show, however it can take up to 14 days. </p>\n                        </TabPanel>\n                    </Tabs></div>\n                <br />\n            </div>)\n    }\n    else {\n        return (<div>Invalid entry</div>)\n    }\n}\nexport default Home;\n// { margin: \"0.1px auto\", alignItems: \"center\", width: \"100%\" }\n// { width: \"100%\", height: \"400px\", objectFit: \"cover\" }","/Users/bijish/projects/miniProject/frontend/src/components/authUI/authForm.js",[],"/Users/bijish/projects/miniProject/frontend/src/adapters/auth.js",[],"/Users/bijish/projects/miniProject/frontend/src/adapters/axiosCalls.js",[],"/Users/bijish/projects/miniProject/frontend/src/general/HandleChanges.js",[],"/Users/bijish/projects/miniProject/frontend/src/pages/News.js",[],"/Users/bijish/projects/miniProject/frontend/src/components/news/NewsCard.js",[],"/Users/bijish/projects/miniProject/frontend/src/components/news/NewsGrid.js",[],"/Users/bijish/projects/miniProject/frontend/src/adapters/news.js",[],"/Users/bijish/projects/miniProject/frontend/src/pages/Statistics.js",[],"/Users/bijish/projects/miniProject/frontend/src/components/statistics/Statistic.js",["213"],"import React from 'react'\nimport { StatiContextWrap } from '../../context/statiContext'\n\n\nimport { Cards } from './Cards/Cards';\nimport CountryPicker from './CountryPicker/CountryPicker';\nimport { Worldmap } from './map/map'\nimport Chart from './Chart/Chart';\n\nimport statisticStyle from './statistic.module.css';\nimport styles from './statistic.module.css';\n\n\nfunction Statistic() {\n    return (\n        < React.Fragment  >\n            <StatiContextWrap>\n\n                <div className={statisticStyle.container} >\n\n                    <Cards />\n                    <CountryPicker />\n                    <Worldmap />\n                    <Chart />\n                </div>\n            </StatiContextWrap>\n        </React.Fragment>\n    )\n}\n\nexport default Statistic;\n","/Users/bijish/projects/miniProject/frontend/src/components/statistics/CountryPicker/CountryPicker.jsx",["214","215","216"],"import React, { useEffect,useContext } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../../adapters/fetchStatistics.js';\nimport { StatiContext } from '../../../context/statiContext'\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = () => {\n\n  const statiContext = useContext(StatiContext);\n\n  let { globalSummary,\n        countries, \n        setCountries,\n        selectCountry,\n        setselectCountry } = statiContext\n \n  const handleChange=(event)=>{\n    \n    setselectCountry(event.target.value)\n  }\n\n  useEffect(async() => {\n    async function fetchData() \n    {\n        \n      let {data}=await fetchCountries()\n      setCountries(data);\n      \n    }\n    console.log(\"inside Country picker useEffect\")\n\n    fetchData()\n      \n\n  },[]);\n\n  if(globalSummary&&countries){\n  return (\n    <FormControl className={styles.formControl}>\n      {countries?\n    <NativeSelect className={styles.formSelect} defaultValue=\" \" onChange={(event) => handleChange(event)}>\n        \n    <option>Select place</option>\n\n        {countries.map((country, i) => \n          <option \n            key={i} \n            value={country.Slug}>\n            {country.Country}\n          </option>)}\n\n      </NativeSelect>:\"loading\"}\n    </FormControl>\n  );\n        }\n        else{\n          return null\n        }\n};\n\nexport default Countries;\n  ","/Users/bijish/projects/miniProject/frontend/src/adapters/fetchStatistics.js",[],"/Users/bijish/projects/miniProject/frontend/src/context/statiContext.js",[],"/Users/bijish/projects/miniProject/frontend/src/components/statistics/Cards/Cards.jsx",["217"],"import React,{useContext,useEffect} from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport CardComponent from './Card/Card';\nimport styles from './Cards.module.css';\n\nimport { fetchCurrent } from '../../../adapters/fetchStatistics.js';\nimport { StatiContext } from '../../../context/statiContext'\nimport image from '../../../images/image.png';\n\nimport { BeatLoader } from \"react-spinners\";\nconst ldstyles = {\n    ldcontainer: {\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        marginTop: \"60px\",\n    },\n    centerit: {\n        marginTop: \"230px\"\n    }\n}\n\n\n\nexport const Cards = () => {\n\n  const statiContext = useContext(StatiContext);\n\n  let { globalSummary,\n        setglobalSummary,\n        countrySummary,\n        setcountrySummary} = statiContext\n  \n  \n  useEffect(()=>{\n    async function fetchData() \n    {\n      \n      let data=await fetchCurrent() \n      if(data)\n      {\n        setglobalSummary(data.globalSummary);\n        setcountrySummary(data.countrySummary);\n      } \n      else\n      {\n        console.log(\"Current summary not loaded\")\n      }  \n      \n    \n    }\n    console.log(\"inside Cards useEffect\")\n\n    fetchData()\n  },[]);\n\n\n  if(globalSummary&&countrySummary){\n\n            let {TotalConfirmed,\n                TotalDeaths,\n                TotalRecovered,\n                ActiveCases,\n                Date}=globalSummary\n\n\n        return (\n        \n          <div className={styles.container}>\n          <img className={styles.image} src={image} alt=\"COVID-19\" />\n\n            <Typography gutterBottom variant=\"h5\" component=\"h1\">Global</Typography>\n            \n            <Grid container spacing={3} justify=\"center\">\n              \n              <CardComponent\n                  className={styles.infected}\n                  cardTitle=\"Infected\"\n                  value={TotalConfirmed}\n                  lastUpdate={Date}\n                  cardSubtitle=\"Infected cases from COVID19.\"\n\n                />\n              \n              <CardComponent\n                className={styles.recovered}\n                cardTitle=\"Recovered\"\n                value={TotalRecovered}\n                lastUpdate={Date}\n                cardSubtitle=\"Recoveries from COVID19.\"\n\n              />\n              \n              <CardComponent\n                className={styles.deaths}\n                cardTitle=\"Deaths\"\n                value={TotalDeaths}\n                lastUpdate={Date}\n                cardSubtitle=\"Deaths from COVID19.\"\n\n              />\n              \n              <CardComponent\n                className={styles.active}\n                cardTitle=\"Active cases\"\n                value={ActiveCases}\n                lastUpdate={Date}\n                cardSubtitle=\"Active cases from COVID19.\"\n\n              />\n            </Grid>\n          </div>\n        );\n  }\n  else {\n    return <div style={ldstyles.ldcontainer}><BeatLoader loading css={ldstyles.centerit} /></div>\n\n  }\n\n};\n\n","/Users/bijish/projects/miniProject/frontend/src/components/statistics/Cards/Card/Card.jsx",[],"/Users/bijish/projects/miniProject/frontend/src/components/statistics/map/map.js",["218"],"import React, { useEffect, useContext } from 'react'\nimport { StatiContext } from '../../../context/statiContext'\nimport { MapContainer, TileLayer, Popup } from 'react-leaflet'\nimport MyMarker from './ExtendedMarker'\n\n\n\n\nexport const Worldmap = () => {\n    const statiContext = useContext(StatiContext);\n    let position = null\n    let { countries, selectCountry, countrySummary, currentPosition, setcurrentPosition, popupdata,\n        setpopupdata } = statiContext\n    useEffect(() => {\n        if (countries) {\n            for (let i = 0; i < countries.length; i++) {\n                if (selectCountry === countries[i].Slug) {\n                    position = [countries[i].latitude, countries[i].longitude]\n                    setcurrentPosition(position)\n                    console.log(position)\n\n                }\n            }\n            if (countrySummary) {\n                for (let i = 0; i < countrySummary.length; i++) {\n                    if (selectCountry === countrySummary[i].Slug) {\n                        let { Country,\n                            TotalConfirmed,\n                            TotalDeaths,\n                            TotalRecovered,\n                            ActiveCases,\n                            Date } = countrySummary[i]\n\n                        setpopupdata(\n                            {\n                                Country,\n                                TotalConfirmed,\n                                TotalDeaths,\n                                TotalRecovered,\n                                ActiveCases,\n                                Date\n                            })\n                    }\n                }\n            }\n        }\n\n    }, [selectCountry])\n    const Centerposition = [15.4542, 18.7322]\n    if (countrySummary && countries) {\n        return (\n\n            <MapContainer center={Centerposition} zoom={2} scrollWheelZoom={false}>\n                <TileLayer\n                    url=\"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}\"\n                    id=\"mapbox/streets-v11\"\n                    accessToken=\"pk.eyJ1IjoiYmlqaXNob2IiLCJhIjoiY2tqNnJzcGYwNmFjeTJybGI5NnJ0bjVmdCJ9.YgiOSIS_Kd3sb0vjT0Q6vg\"\n                />\n                {currentPosition ? <MyMarker position={currentPosition}>\n                    <Popup>\n                        <b>{popupdata.Country}</b>\n                        <br />\n                        {`Total Confirmed : ${popupdata.TotalConfirmed}`}\n                        <br />\n\n                        {`Total Deaths : ${popupdata.TotalDeaths}`}\n                        <br />\n\n                        {`Total Recovered : ${popupdata.TotalRecovered}`}\n                        <br />\n\n                        {`Active Cases : ${popupdata.ActiveCases}`}\n                        <br />\n\n                        {/*`Date : ${popupdata.Date}`*/}\n\n\n                    </Popup>\n                </MyMarker> : null}\n\n            </MapContainer>\n\n        )\n    }\n    else {\n        return null\n    }\n\n}\n// <TileLayer\n//                     attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n//                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//                 />\n// attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n","/Users/bijish/projects/miniProject/frontend/src/pages/SymptomChecker.js",["219","220"],"import { useState, useEffect } from 'react'\nimport ChatBot from 'react-simple-chatbot';\nimport PropTypes from 'prop-types';\nimport chatboticon from '../images/coronaLogo.svg'\n\n\nconst styles = { container: { margin: \"1000px auto\", alignItems: \"center\" } }\n\nconst CustomResult = (props) => {\n    let { beforeMessage, afterMessage, condition1, condition2, condition3 } = props\n\n    //states\n    const [age, setage] = useState('')\n    const [fever, setfever] = useState('')\n    const [RF, setRF] = useState(false)\n\n    useEffect(() => {\n        let { steps } = props\n        let { age, fever, RF } = steps\n\n        setage(age)\n        setfever(fever)\n        setRF(RF)\n\n    }, [age, fever, RF])\n\n\n    //condition1-age checking, condition2-fever checking and condition3-RF checking \n\n    if (condition3) {\n        if (condition1 && (!condition2)) {\n            return (<div>\n                {(age.value > 65 || RF ? `${beforeMessage} ${afterMessage}` : `${beforeMessage}`)}\n            </div>)\n        }\n        else if ((!condition1) && condition2) {\n            return (<div>\n                {(fever.value > 40 || RF ? `${beforeMessage} ${afterMessage}` : `${beforeMessage}`)}\n            </div>)\n        }\n        else if ((!condition1) && (!condition2)) {\n            return (<div>\n                {(RF ? `${beforeMessage} ${afterMessage}` : `${beforeMessage}`)}\n            </div>)\n        }\n        else if (condition1 && condition2) {\n            return (<div>\n                {(age.value > 65 || fever.value > 40 || RF ? `${beforeMessage} ${afterMessage}` : `${beforeMessage}`)}\n            </div>)\n        }\n    }\n    else {\n        if (condition1 && (!condition2)) {\n            return (<div>\n                {(age.value > 65 ? `${beforeMessage} ${afterMessage}` : `${beforeMessage}`)}\n            </div>)\n        }\n        else if ((!condition1) && condition2) {\n            return (<div>\n                {(fever.value > 40 ? `${beforeMessage} ${afterMessage}` : `${beforeMessage}`)}\n            </div>)\n        }\n\n        else if (condition1 && condition2) {\n            return (<div>\n                {(age.value > 65 || fever.value > 40 ? `${beforeMessage} ${afterMessage}` : `${beforeMessage}`)}\n            </div>)\n        }\n\n    }\n}\nCustomResult.propTypes = {\n    steps: PropTypes.object,\n};\n\nCustomResult.defaultProps = {\n    steps: undefined,\n};\nexport default function SymptomChecker() {\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }} >\n            <ChatBot botAvatar={chatboticon} floating\n                steps={[\n                    {\n                        id: '0',\n                        message: 'Hi, may I help you?',\n                        trigger: '0.1',\n                    },\n                    {\n                        id: '0.1',\n                        options: [\n                            { value: 'yes', label: 'Yes', trigger: '1' },\n                            { value: 'no', label: 'No', trigger: '0.2' },\n                        ],\n                    },\n                    {\n                        id: '0.2',\n                        message: 'Ok.',\n                        end: true,\n                    },\n                    {\n                        id: '1',\n                        message: 'What is your name?',\n                        trigger: '2',\n                    },\n                    {\n                        id: '2',\n                        user: true,\n                        trigger: '3',\n                    },\n                    {\n                        id: '3',\n                        message: 'Ok {previousValue}, what is your gender',\n                        trigger: '4',\n                    },\n\n                    {\n                        id: '4',\n                        options: [\n                            { value: 'male', label: 'Male', trigger: '5' },\n                            { value: 'female', label: 'Female', trigger: '5' },\n                        ],\n                    },\n\n                    {\n                        id: '5',\n                        message: 'How old are you?',\n                        trigger: 'age',\n                    },\n                    {\n                        id: 'age',\n                        user: true,\n                        // validator: (value) => {\n                        //     if (isNaN(value)) {\n                        //         return 'value must be a number';\n                        //     } else if (value < 65) {\n                        //         return true;\n                        //     }\n\n                        // },\n                        trigger: '7',\n                    },\n                    {\n                        id: '7',\n                        component: (\n                            <div >\n                                <h4>Do you have any of the folowing:</h4>\n                                <p><ol style={{ marginLeft: \"20px\" }}>\n                                    <li>Diagnosed chronic lung disease</li>\n                                    <li>History of heart failure</li>\n                                    <li>Current Cancer</li>\n                                    <li>Weakened immune system</li>\n                                    <li>History of chronic liver disease</li>\n                                    <li>History of kidney failure</li>\n                                    <li>Long-term stay at a care facility or nursing home</li>\n                                </ol></p>\n                            </div>\n                        ),\n                        trigger: 'RF',\n\n                    },\n                    {\n                        id: 'RF',\n                        options: [\n                            { value: true, label: 'Yes', trigger: '9' },\n                            { value: false, label: 'No', trigger: '9' },\n                        ],\n                    },\n                    {\n                        id: '9',\n                        component: (\n                            <div >\n                                <h4>Do you have any of the folowing symptoms? Please select symptoms that are not related to any chronic disease you may be subject to.</h4>\n                                <p><ol style={{ marginLeft: \"20px\" }}>\n                                    <li>Fever</li>\n                                    <li>Cough</li>\n                                    <li>Shortness of breath</li>\n\n                                </ol></p>\n                            </div>\n                        ),\n                        trigger: '10'\n                    },\n                    {\n                        id: '10',\n                        options: [\n                            { value: 1, label: 'no fever & shortness of breath', trigger: '11' },\n                            { value: 2, label: 'cough ', trigger: '12' },\n\n                            { value: 3, label: 'fever ', trigger: '13' },\n                            { value: 4, label: 'fever and shortness of breath ', trigger: '14' },\n\n                            { value: 5, label: 'all symptoms ', trigger: '14' },\n                            { value: 6, label: 'only fever & cough ', trigger: '15' },\n\n                            { value: 7, label: 'None', trigger: '16' },\n\n                        ],\n                    },\n                    {\n                        id: '11',\n                        message: 'Are your symptoms worsening rapidly?',\n                        trigger: '11.1',\n                    },\n                    {\n                        id: '11.1',\n                        options: [\n                            { value: 1, label: 'Yes', trigger: '11.2' },\n                            { value: 2, label: 'No', trigger: '11.2' },\n                        ],\n                    },\n                    {\n                        id: '11.2',\n                        message: 'Are you breathing very fast?',\n                        trigger: '11.2optn',\n                    },\n                    {\n                        id: '11.2optn',\n                        options: [\n                            { value: 1, label: 'Yes', trigger: '11.3' },\n                            { value: 2, label: 'No', trigger: '11.3' },\n                        ],\n                    },\n                    {\n                        id: '11.3',\n                        message: 'Are you coughing up blood?',\n                        trigger: '11.4',\n                    },\n                    {\n                        id: '11.4',\n                        options: [\n                            { value: 1, label: 'Yes', trigger: 'ResEmergency' },\n                            { value: 2, label: 'No', trigger: '11.5' },\n                        ],\n                    },\n                    {\n                        id: '11.5',\n                        component: (\n                            <div >\n                                <h4>Do you have any of the folowing symptoms? </h4>\n                                <p><ol style={{ marginLeft: \"20px\" }}>\n                                    <li>Fatigue</li>\n                                    <li>Muscle pain</li>\n                                    <li>chills</li>\n                                    <li>Headache</li>\n                                    <li>Diarrhea</li>\n                                    <li>Nausea</li>\n                                    <li>Sore throat</li>\n                                </ol></p>\n                            </div>\n                        ),\n                        trigger: '11.6'\n                    },\n                    {\n                        id: '11.6',\n                        options: [\n                            { value: 1, label: 'any(except fatigue)', trigger: '11.6.2' },\n                            { value: 2, label: 'fatigue', trigger: '11.6.1' },\n                            { value: 3, label: 'none', trigger: '11.6.1' },\n                        ],\n                    },\n                    {\n                        id: '11.6.1',\n                        component: (\n                            <div >\n                                <h4>Have you had close contact with a person with suspected COVID-19 infection in the last 14 days? </h4>\n                                <ol style={{ marginLeft: \"20px\" }}>\n                                    <li>I live or have care to a person suspected of having COVID-19</li>\n                                    <li>I had face to face contact for longer than 15 minutes with a person suspected of having COVID-19</li>\n                                    <li>other</li>\n                                    <li>None of the above</li>\n                                </ol>\n                            </div>\n                        ),\n                        trigger: '11.6.1optns',\n                    },\n                    {\n                        id: '11.6.1optns',\n                        options: [\n                            { value: 1, label: '1', trigger: 'ResConHlth' },\n                            { value: 2, label: '2', trigger: 'ResConHlth' },\n                            { value: 3, label: '3', trigger: 'ResConHlth' },\n                            { value: 4, label: '4', trigger: 'ResCallDr' },\n                            { value: 5, label: '5', trigger: 'ResCallDr' },\n\n                        ],\n                    },\n                    {\n                        id: '11.6.2',\n                        component: (\n                            <div >\n                                <h4> Have you had close contact with a person with suspected COVID-19 infection in the last 14 days? </h4>\n                                <ol style={{ marginLeft: \"20px\" }}>\n                                    <li>I live or have care to a person suspected of having COVID-19</li>\n                                    <li>I had face to face contact for longer than 15 minutes with a person suspected of having COVID-19</li>\n                                    <li>other</li>\n                                    <li>None of the above</li>\n                                </ol>\n                            </div>\n                        ),\n                        trigger: '11.6.2optns',\n                        // end: true,\n                    },\n                    {\n                        id: '11.6.2optns',\n                        options: [\n                            { value: 1, label: '1', trigger: 'customResult' },\n                            { value: 2, label: '2', trigger: 'customResult' },\n                            { value: 3, label: '3', trigger: 'customResult' },\n                            { value: 4, label: '4', trigger: 'ResCallDr' },\n                            { value: 5, label: '5', trigger: 'ResCallDr' },\n\n                        ],\n                    },\n                    {\n                        id: 'customResult',\n                        component: <CustomResult beforeMessage=\"Avoid all contact. Consult health department.\" afterMessage=\" Call the emergency number.\" condition1={true} condition2={false} condition3={true} />,\n                        asMessage: true,\n                        end: true,\n                    },\n                    // from id:'12' to id:'16' are dummy values\n\n                    {\n                        id: '12',\n                        message: 'dummy',\n                        end: true,\n                    },\n                    {\n                        id: '13',\n                        message: 'dummy',\n                        end: true,\n                    },\n                    {\n                        id: '14',\n                        message: 'dummy',\n                        end: true,\n                    },\n                    {\n                        id: '15',\n                        message: 'dummy',\n                        end: true,\n                    },\n                    {\n                        id: '16',\n                        message: 'dummy',\n                        end: true,\n                    },\n\n                    //results\n                    {\n                        id: 'ResEmergency',\n                        message: 'Call the emergency number. Avoid all contact.',\n                        end: true,\n                    },\n                    {\n                        id: 'ResCallDr',\n                        message: 'Call Doctor.',\n                        end: true,\n                    },\n                    {\n                        id: 'ResConHlth',\n                        message: 'Avoid all contact. Consult health department',\n                        end: true,\n                    },\n\n                ]}\n            />\n        </div >\n    )\n}\n\n\n","/Users/bijish/projects/miniProject/frontend/src/components/statistics/map/ExtendedMarker.js",[],"/Users/bijish/projects/miniProject/frontend/src/components/statistics/Chart/Chart.jsx",["221"],"import React, {  useEffect,useContext } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { StatiContext } from '../../../context/statiContext'\nimport { fetchHistoric } from '../../../adapters/fetchStatistics.js';\nimport styles from './Chart.module.css';\n\nconst Chart = () => {\n  \n  const statiContext = useContext(StatiContext);\n  \n  let { selectCountry,\n      countryHistoric,\n      setcountryHistoric } = statiContext\n  \n  // const scrapChartData=async()=>{\n  //   if(countryHistoric){ \n  //     console.log(countryHistoric)\n  //     let labels= await [...countryHistoric].map((data ) => new Date(data.Date).toLocaleDateString(\"en-IN\"))\n  //     let confirmed=await [...countryHistoric].map((data) => data.Confirmed)\n  //     let deaths=await [...countryHistoric].map((data) => data.Deaths)\n  //     let recovered=await [...countryHistoric].map((data) => data.Recovered)\n\n  //     setcurrentChartData({labels,confirmed,deaths,recovered})\n\n  //   }\n  // }\n  \n  \n\n  useEffect( ()=>{\n    async function fetchData() {\n    \n      let data=selectCountry?await fetchHistoric(selectCountry):null\n        setcountryHistoric(data)\n      \n    }\n    console.log(\"inside Chart useEffect\")\n\n    fetchData()\n  },[selectCountry]);\n\n  \n\n  const lineChart = (\n      countryHistoric? (\n      <Line data={{\n          labels:[...countryHistoric].map((data ) => new Date(data.Date).toLocaleDateString(\"en-IN\")) ,\n          datasets: [{\n            data: [...countryHistoric].map((data) => data.Confirmed),\n            label: 'Confirmed',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: [...countryHistoric].map((data) => data.Deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },  {\n            data: [...countryHistoric].map((data) => data.Recovered),\n            label: 'Recovered',\n            borderColor: 'green',\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\n            fill: true,\n          },{\n            data: [...countryHistoric].map((data) => data.Confirmed-data.Recovered-data.Deaths),\n            label: 'yellow',\n            borderColor: 'yellow',\n            backgroundColor: 'rgba(240, 255, 0, 1)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n// const data = \n  return (\n    <div className={styles.container}>\n    {lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n// currChartData.map(({ date }) => new Date(date).toLocaleDateString())","/Users/bijish/projects/miniProject/frontend/src/SubApp.js",["222","223","224","225"],"//hooks\nimport { useContext, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n//pages\nimport Home from './pages/Home';\nimport News from './pages/News';\nimport Statistics from './pages/Statistics';\nimport ManagePatients from './pages/ManagePatients';\nimport ManageInstitution from './pages/ManageInstitution';\nimport NearbyInstitutions from './pages/NearbyInstitutions';\nimport ManageUsers from './pages/ManageUsers';\nimport Profile from './pages/Profile';\nimport NearbyPatients from './pages/NearbyPatients';\nimport ManageContacts from './pages/ManageContacts';\nimport ManageNews from './pages/ManageNews';\nimport Patients from './pages/Patients';\nimport MedicalCentres from './pages/MedicalCentres';\nimport Contacts from './pages/Contacts';\n\n\n\n\n\n\n\n//context\nimport { MainContext } from './context/maincontext'\n\n//custom components\nimport Navbar from './components/navbar/Navbar';\nimport { AuthForm } from './components/authUI/authForm'\nimport { ProtectedRoute } from \"./components/protectedRoute/protected.route\";\n\n\n//adapters\nimport { verifyAccessTkn } from './adapters/verifyToken'\nimport { polllocation } from './adapters/location'\n\n\n\nexport default function SubApp() {\n    let { isLogin,\n        tokenVerified, settokenVerified,\n        handleToken,\n        setusername,\n        setuserRole, userRole,\n        settimeoutID } = useContext(MainContext)\n\n    useEffect(async () => {\n        let tokenRes = handleToken(\"read\")\n        if (tokenRes) {\n            let verify = await verifyAccessTkn(tokenRes)\n            if (verify) {\n                let { username, userRole, action } = verify\n                settokenVerified(action)\n                setusername(username)\n                setuserRole(userRole)\n                if (userRole === \"patient\")\n                    polllocation()\n            }\n\n\n        }\n\n    }, [])\n    useEffect(async () => {\n        if (userRole === \"patient\") {\n            //polllocation\n            settimeoutID(setInterval(() => {\n                console.log(\"from subapp\")\n                polllocation()\n            }, 10000))\n        }\n    }, [userRole, setuserRole])\n\n    //checking \n    console.log(\"isLogin :\" + isLogin)\n    console.log(\"tokenVerified :\" + tokenVerified)\n\n\n    return (tokenVerified || isLogin) ? (<>\n        <Router>\n            <Navbar />\n            <Switch>\n                <Route exact path='/' component={Home} />\n                <ProtectedRoute exact path='/news' component={News} />\n                <ProtectedRoute exact path='/statistics' component={Statistics} />\n                <ProtectedRoute exact path='/managepatients' component={ManagePatients} />\n                <ProtectedRoute exact path='/manageinstitution' component={ManageInstitution} />\n                <ProtectedRoute exact path='/nearbyinstitutions' component={NearbyInstitutions} />\n                <ProtectedRoute exact path='/manageusers' component={ManageUsers} />\n                <ProtectedRoute exact path='/profile' component={Profile} />\n                <ProtectedRoute exact path='/nearbypatients' component={NearbyPatients} />\n                <ProtectedRoute exact path='/managecontacts' component={ManageContacts} />\n                <ProtectedRoute exact path='/managenews' component={ManageNews} />\n                <ProtectedRoute exact path='/patients' component={Patients} />\n                <ProtectedRoute exact path='/institutions' component={MedicalCentres} />\n                <ProtectedRoute exact path='/contacts' component={Contacts} />\n\n\n\n                <Route path=\"/\" render={() => <div >404 NOT FOUND</div>} />\n\n            </Switch>\n        </Router>\n    </>\n    ) : <AuthForm authMethod=\"Login\" />\n\n\n}","/Users/bijish/projects/miniProject/frontend/src/adapters/verifyToken.js",[],"/Users/bijish/projects/miniProject/frontend/src/adapters/location.js",[],"/Users/bijish/projects/miniProject/frontend/src/pages/ManagePatients.js",["226","227"],"//hooks\nimport { useState, useEffect } from 'react'\n\n//adapters\nimport { fetchBasicUsers, sentPatients, sentUsers, fetchPatientUsers } from '../adapters/managepatients'\n\n//css\nimport styles from './managepatients.module.css'\n\n//images\nimport backbutton from '../images/backButton2.png';\n\n\nexport default function ManagePatients() {\n\n    //states\n    const [option, setoption] = useState(null)\n    const [basicUsers, setbasicUsers] = useState(null)\n    const [patientUsers, setpatientUsers] = useState(null)\n\n    const [addPatients, setaddPatients] = useState([])\n    const [removePatients, setremovePatients] = useState([])\n\n    //effects\n    useEffect(async () => {\n        try {\n            if (option === \"add\") {\n                let data = await fetchBasicUsers()\n                if (data) {\n                    let { docs } = data\n                    setbasicUsers(docs)\n                    console.log(basicUsers)\n                }\n\n            }\n            else if (option === \"remove\") {\n                let data = await fetchPatientUsers()\n                if (data) {\n                    let { docs } = data\n                    setpatientUsers(docs)\n                    console.log(patientUsers)\n                }\n            }\n        }\n        catch (err) {\n            console.log(err)\n        }\n\n    }, [setoption, option, setbasicUsers, setpatientUsers])\n    console.log(removePatients)\n\n    //handleCheckbox\n    const handleAddCheckbox = (event) => {\n\n        let { target: { checked, name } } = event\n        if (checked) {\n            setaddPatients([...addPatients, name])\n        }\n        else if (!checked) {\n            setaddPatients(\n                addPatients.filter(\n                    (ele) => {\n                        return ele !== name\n                    }\n                )\n            )\n\n        }\n        console.log(`${event.target.name} : ${event.target.checked} `)\n    }\n\n    const handleRemoveCheckbox = (event) => {\n\n        let { target: { checked, name } } = event\n        if (checked) {\n            setremovePatients([...removePatients, name])\n        }\n        else if (!checked) {\n            setremovePatients(\n                removePatients.filter(\n                    (ele) => {\n                        return ele !== name\n                    }\n                )\n            )\n\n        }\n        console.log(`${event.target.name} : ${event.target.checked} `)\n    }\n    //handle submit\n    const handleAddSubmit = () => {\n        if (addPatients) {\n            sentPatients({ addPatients })\n            setbasicUsers(\n                basicUsers.filter(\n                    (ele) => {\n                        return !addPatients.includes(ele._id)\n                    }\n                )\n            )\n            setaddPatients([])\n        }\n    }\n    const handleRemoveSubmit = () => {\n        if (addPatients) {\n            sentUsers({ removePatients })\n            setpatientUsers(\n                patientUsers.filter(\n                    (ele) => {\n                        return !removePatients.includes(ele._id)\n                    }\n                )\n            )\n            setremovePatients([])\n        }\n    }\n\n    if (option === null) {\n        return (\n\n            <div className={styles.blockbuttoncontainer}>\n                <button className={styles.block1} onClick={() => { setoption(\"add\") }}>Add patient</button>\n                <button className={styles.block2} onClick={() => { setoption(\"remove\") }}>Remove patient</button>\n\n            </div>\n        )\n    }\n    else if (option === \"add\") {\n        return (\n            <div className={styles.container}>\n                <img className={styles.backbutton} src={backbutton} alt=\"back\" onClick={() => { setoption(null) }} />\n                {/*<button className={styles.backbutton} onClick={() => { setoption(null) }}>&#8249;</button>*/}\n\n                <table className={styles.users} >\n                    <tbody >\n                        <tr>\n                            <th  >User</th ><th >Mark as patient</th>\n                        </tr>\n                        {basicUsers ? basicUsers.map((basicUser) => {\n                            return (\n                                <tr key={basicUser._id}>\n                                    <td>{basicUser.username}</td>\n                                    <td>\n                                        <input name={basicUser._id} type=\"checkbox\" onChange={(event) => handleAddCheckbox(event)}></input>\n                                    </td>\n                                </tr>)\n                        }) : null}\n                    </tbody>\n                </table>\n\n                <input type=\"submit\" onClick={() => handleAddSubmit()}></input>\n            </div >)\n    }\n    else if (option === \"remove\") {\n        return (\n            <div className={styles.container}>\n                <img className={styles.backbutton} src={backbutton} alt=\"back\" onClick={() => { setoption(null) }} />\n\n                {/*<button className={styles.backbutton} onClick={() => { setoption(null) }}>Back</button>*/}\n\n                <table className={styles.users} >\n                    <tbody >\n                        <tr>\n                            <th  >User</th ><th >Remove patient</th>\n                        </tr>\n                        {patientUsers ? patientUsers.map((patientUser) => {\n                            return (\n                                <tr key={patientUser._id}>\n                                    <td>{patientUser.username}</td>\n                                    <td>\n                                        <input name={patientUser._id} type=\"checkbox\" onChange={(event) => handleRemoveCheckbox(event)}></input>\n                                    </td>\n                                </tr>)\n                        }) : null}\n\n                    </tbody>\n                </table>\n\n                <button className={styles.savechanges} onClick={() => handleRemoveSubmit()}>Save changes</button>\n            </div >)\n    }\n}","/Users/bijish/projects/miniProject/frontend/src/adapters/managepatients.js",[],"/Users/bijish/projects/miniProject/frontend/src/pages/ManageInstitution.js",["228"],"//hooks\nimport { useState, useEffect, useContext } from 'react'\n\n//context\nimport { MainContext } from '../context/maincontext'\n\n//adapters\nimport { createInstitution, fetchInstitutionsbyHealth, removeInstitution } from '../adapters/manageinstitution'\n\n//css\nimport styles from './ManageInstitution.module.css'\nimport backbutton from '../images/backButton2.png';\nexport default function ManageInstitution(props) {\n    //context\n    let { tokenVerified, isLogin, userRole } = useContext(MainContext)\n\n\n    //states\n    const [option, setoption] = useState(null)\n    const [value, setvalue] = useState({ instituteName: '', latitude: '', longitude: '', contactInfo: '' })\n    const [showClear, setshowClear] = useState(false)\n    const [institutions, setinstitutions] = useState(null)\n    const [removeinstitutions, setremoveinstitutions] = useState([])\n\n    console.log(removeinstitutions)\n    //effects\n    useEffect(() => {\n        if (value.instituteName === '' &&\n            value.latitude === '' &&\n            value.longitude === '' &&\n            value.contactInfo === '') {\n            setshowClear(false)\n        }\n    }, [value])\n\n    useEffect(async () => {\n        if (option === \"view\") {\n            let data = await fetchInstitutionsbyHealth()\n            if (data) {\n                setinstitutions(data)\n            }\n        }\n\n    }, [option, setremoveinstitutions, removeinstitutions])\n\n    //handleChange\n    const handleChange = (event) => {\n        setshowClear(true)\n        setvalue({ ...value, [event.target.name]: event.target.value })\n    }\n    const clearFields = () => {\n        setvalue({ instituteName: '', latitude: '', longitude: '', contactInfo: '', statusTxt: '' })\n\n    }\n\n    //handleCheckbox\n    const handleRemoveCheckbox = (event) => {\n        let { target: { checked, name } } = event\n        if (checked) {\n            setremoveinstitutions([...removeinstitutions, name])\n        }\n        else if (!checked) {\n            setremoveinstitutions(\n                removeinstitutions.filter(\n                    (ele) => {\n                        return ele !== name\n                    }\n                )\n            )\n\n        }\n        console.log(`${event.target.name} : ${event.target.checked} `)\n    }\n    //handleOnsubmit\n    const handleAddOnsubmit = async (event) => {\n        try {\n            let { instituteName, latitude, longitude, contactInfo } = value\n            let { status } = await createInstitution({ instituteName, latitude, longitude, contactInfo })\n            setvalue({ statusTxt: status })\n            console.log(status)\n        }\n        catch (err) {\n            console.log(err)\n        }\n\n\n    }\n    const handleRemoveSubmit = async (event) => {\n        try {\n            if (removeinstitutions) {\n                let data = await removeInstitution({ removeinstitutions })\n                setremoveinstitutions([])\n                console.log(data)\n\n            }\n        }\n        catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    if ((tokenVerified === true || isLogin === true) && userRole === \"health\") {\n        if (option === null) {\n            return (\n                <div className={styles.blockbuttoncontainer}>\n                    <button className={styles.block1} onClick={() => setoption(\"add\")}>Add institution</button>\n                    <button className={styles.block2} onClick={() => setoption(\"view\")}>View institution</button>\n                </div>\n            )\n        }\n        else if (option === \"add\") {\n            return (\n                <div className={styles.container}>\n                    {/*<button onClick={() => setoption(null)}>Back</button>*/}\n                    <img className={styles.backbutton} src={backbutton} alt=\"back\" onClick={() => { setoption(null) }} />\n\n                    <div>\n                        <label>Institution Name</label>\n                        <input name=\"instituteName\" type=\"text\" value={value.instituteName}\n                            onChange={(event) => handleChange(event)}></input>\n\n                        <label>Latitude</label>\n                        <input name=\"latitude\" type=\"text\" value={value.latitude}\n                            onChange={(event) => handleChange(event)}></input>\n\n                        <label>Longitude</label>\n                        <input name=\"longitude\" type=\"text\" value={value.longitude}\n                            onChange={(event) => handleChange(event)}></input>\n                        {/*<input type=\"checkbox\"></input>use current location*/}\n\n                        <label>Contact Info</label>\n                        <textarea name=\"contactInfo\" value={value.contactInfo}\n                            onChange={(event) => handleChange(event)}></textarea>\n\n                        {showClear ?\n                            (<button onClick={() => {\n                                clearFields()\n                            }}>clear Fields</button>) : null\n                        }\n\n                        <input type=\"submit\" onClick={(event) => handleAddOnsubmit(event)}></input>\n                        <h4>{value.statusTxt}</h4>\n\n                    </div>\n                </div>\n            )\n        }\n        else if (option === \"view\") {\n            return (\n                <div className={styles.container}>\n                    {/*<button onClick={() => setoption(null)}>Back</button>*/}\n                    <img className={styles.backbutton} src={backbutton} alt=\"back\" onClick={() => { setoption(null) }} />\n                    <table className={styles.institutionsTbl} >\n                        <tbody >\n                            <tr>\n                                <th  >Institution</th >\n                                <th >Contact Info</th>\n                                <th >Mark to remove</th>\n\n                            </tr>\n                            {institutions ? institutions.map((institution) => {\n                                return (\n                                    <tr key={institution._id}>\n                                        <td>{institution.instituteName}</td>\n                                        <td>{institution.contactInfo}</td>\n                                        <td style={{ textAlign: \"center\" }}>\n                                            <input name={institution._id} type=\"checkbox\" onChange={(event) => handleRemoveCheckbox(event)}></input>\n                                        </td>\n                                    </tr>)\n                            }) : null}\n                        </tbody>\n                    </table>\n                    <button className={styles.savechanges} onClick={() => handleRemoveSubmit()}>Save changes</button>\n\n                </div>\n            )\n        }\n    }\n    else {\n        return (<div>Invalid entry</div>)\n    }\n}","/Users/bijish/projects/miniProject/frontend/src/adapters/manageinstitution.js",[],"/Users/bijish/projects/miniProject/frontend/src/pages/LandingPage.js",[],"/Users/bijish/projects/miniProject/frontend/src/components/protectedRoute/protected.route.js",[],"/Users/bijish/projects/miniProject/frontend/src/pages/NearbyInstitutions.js",["229","230"],"/Users/bijish/projects/miniProject/frontend/src/pages/ManageUsers.js",["231"],"import React, { useContext, useState, useEffect } from 'react';\nimport { MainContext } from '../context/maincontext'\nimport { fetchUsers, updateUsers } from '../adapters/manageusers'\nimport styles from './manageusers.module.css'\n\nfunction ManageUsers() {\n    let { tokenVerified, isLogin } = useContext(MainContext)\n\n    //states\n    const [users, setusers] = useState([])\n    const [updatelist, setupdatelist] = useState([])\n    const [statustxt, setstatustxt] = useState('')\n    //effect\n    useEffect(async () => {\n\n        let { docs, status } = await fetchUsers()\n\n        setusers(docs)\n        console.log(status)\n\n    }, [statustxt])\n    const handleRole = (event) => {\n        setstatustxt('')\n\n        let { target: { name, value } } = event\n        let filteredlist = []\n        for (let i = 0; i < updatelist.length; i++) {\n            if (updatelist[i]._id !== name) {\n                filteredlist.push({ _id: updatelist[i]._id, role: updatelist[i].role })\n            }\n        }\n\n        setupdatelist([...filteredlist, { _id: name, role: value }])\n\n    }\n    console.log(updatelist)\n\n    const handleSave = async () => {\n        if (updatelist) {\n            let { status } = await updateUsers({ updatelist })\n            console.log(status)\n            setstatustxt(status)\n        }\n    }\n    if (tokenVerified === true || isLogin === true) {\n        return (<div className={styles.container}>\n\n            <table className={styles.users} >\n                <tbody >\n                    <tr>\n                        <th  >User</th ><th >Role</th><th >Change role</th>\n                    </tr>\n                    {users ? users.map((user) => {\n                        return (\n                            <tr key={user._id}>\n                                <td>{user.username}</td>\n                                <td>\n                                    {user.role}\n                                </td>\n                                <td>\n\n                                    <select name={user._id} onChange={(e) => handleRole(e)}>\n                                        <option >select role</option>\n                                        <option value=\"basic\">basic user</option>\n                                        <option value=\"health\">health</option>\n                                        <option value=\"admin\">admin</option>\n                                    </select>\n\n                                </td>\n                            </tr>)\n                    }) : null}\n                </tbody>\n            </table>\n\n            <button className={styles.savechanges} onClick={() => handleSave()}>save changes</button>\n            <h4>{statustxt}</h4>\n        </div >)\n\n    }\n    else {\n        return (<div>Invalid entry</div>)\n    }\n}\nexport default ManageUsers;\n","/Users/bijish/projects/miniProject/frontend/src/adapters/manageusers.js",[],"/Users/bijish/projects/miniProject/frontend/src/pages/Profile.js",[],"/Users/bijish/projects/miniProject/frontend/src/pages/NearbyPatients.js",["232","233","234"],"/Users/bijish/projects/miniProject/frontend/src/pages/ManageContacts.js",["235","236"],"//hooks\nimport { useState, useEffect, useContext } from 'react'\n\n//context\nimport { MainContext } from '../context/maincontext'\n\n//adapters\nimport { createContact, fetchContacts, removeContact } from '../adapters/managecontacts'\n\n//css\nimport styles from './ManageInstitution.module.css'\nimport backbutton from '../images/backButton2.png';\n\nimport { Loader } from '../components/loader/Loader'\n\n\nexport default function Managecontact(props) {\n    //context\n    let { tokenVerified, isLogin, userRole } = useContext(MainContext)\n\n\n    //states\n    const [option, setoption] = useState(null)\n    const [value, setvalue] = useState({ contactName: '', contactNumber: '' })\n    const [showClear, setshowClear] = useState(false)\n    const [contacts, setcontacts] = useState(null)\n    const [removecontacts, setremovecontacts] = useState([])\n\n    console.log(removecontacts)\n    //effects\n    useEffect(() => {\n        if (value.contactName === '' &&\n            value.contactNumber === '') {\n            setshowClear(false)\n        }\n    }, [value])\n\n    useEffect(async () => {\n        if (option === \"view\") {\n            let data = await fetchContacts()\n            if (data) {\n                setcontacts(data)\n                console.log(contacts)\n            }\n        }\n\n    }, [option, setremovecontacts, removecontacts])\n\n    //handleChange\n    const handleChange = (event) => {\n        setshowClear(true)\n        setvalue({ ...value, [event.target.name]: event.target.value })\n    }\n    const clearFields = () => {\n        setvalue({ contactName: '', contactNumber: '', statusTxt: '' })\n\n    }\n\n    //handleCheckbox\n    const handleRemoveCheckbox = (event) => {\n        let { target: { checked, name } } = event\n        if (checked) {\n            setremovecontacts([...removecontacts, name])\n        }\n        else if (!checked) {\n            setremovecontacts(\n                removecontacts.filter(\n                    (ele) => {\n                        return ele !== name\n                    }\n                )\n            )\n\n        }\n        console.log(`${event.target.name} : ${event.target.checked} `)\n    }\n    //handleOnsubmit\n    const handleAddOnsubmit = async () => {\n        try {\n            let { contactName, contactNumber } = value\n            let { status } = await createContact({ contactName, contactNumber })\n            setvalue({ statusTxt: status })\n            console.log(status)\n        }\n        catch (err) {\n            console.log(err)\n        }\n\n\n    }\n    const handleRemoveSubmit = async () => {\n        try {\n            if (removecontacts) {\n                let data = await removeContact({ removecontacts })\n                setremovecontacts([])\n                console.log(data)\n\n            }\n        }\n        catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    if ((tokenVerified === true || isLogin === true) && userRole === \"admin\") {\n        if (option === null) {\n            return (\n                <div className={styles.blockbuttoncontainer}>\n                    <button className={styles.block1} onClick={() => setoption(\"add\")}>Add contact</button>\n                    <button className={styles.block2} onClick={() => setoption(\"view\")}>View contact</button>\n                </div>\n            )\n        }\n        else if (option === \"add\") {\n            return (\n                <div className={styles.container}>\n                    {/*<button onClick={() => setoption(null)}>Back</button>*/}\n                    <img className={styles.backbutton} src={backbutton} alt=\"back\" onClick={() => { setoption(null) }} />\n\n                    <div>\n                        <label>Contact Name</label>\n                        <input name=\"contactName\" type=\"text\" value={value.contactName}\n                            onChange={(event) => handleChange(event)}></input>\n\n\n                        <label>Contact Number</label>\n                        <textarea name=\"contactNumber\" value={value.contactNumber}\n                            onChange={(event) => handleChange(event)}></textarea>\n\n                        {showClear ?\n                            (<button onClick={() => {\n                                clearFields()\n                            }}>clear Fields</button>) : null\n                        }\n\n                        <input type=\"submit\" onClick={(event) => handleAddOnsubmit(event)}></input>\n                        <h4>{value.statusTxt}</h4>\n\n                    </div>\n                </div>\n            )\n        }\n        else if (option === \"view\") {\n\n            if (contacts) {\n                return (\n                    <div className={styles.container}>\n                        <img className={styles.backbutton} src={backbutton} alt=\"back\" onClick={() => { setoption(null) }} />\n                        <table className={styles.institutionsTbl} >\n                            <tbody >\n                                <tr>\n                                    <th  >Contact name</th >\n                                    <th >Contact details</th>\n                                    <th >Mark to remove</th>\n\n                                </tr>\n                                {contacts.map((contact) => {\n                                    return (\n                                        <tr key={contact._id}>\n                                            <td>{contact.ContactName}</td>\n                                            <td>{contact.ContactNumber}</td>\n                                            <td style={{ textAlign: \"center\" }}>\n                                                <input name={contact._id} type=\"checkbox\" onChange={(event) => handleRemoveCheckbox(event)}></input>\n                                            </td>\n                                        </tr>)\n                                })}\n                            </tbody>\n                        </table>\n                        <button className={styles.savechanges} onClick={() => handleRemoveSubmit()}>Save changes</button>\n\n\n\n                    </div>\n                )\n            }\n            else {\n                return <Loader centerit={true} />\n\n            }\n        }\n    }\n    else {\n        return (<div>Invalid entry</div>)\n    }\n}","/Users/bijish/projects/miniProject/frontend/src/adapters/managecontacts.js",[],"/Users/bijish/projects/miniProject/frontend/src/pages/ManageNews.js",["237","238"],"//hooks\nimport { useState, useEffect, useContext } from 'react'\n\n//context\nimport { MainContext } from '../context/maincontext'\n\n//adapters\nimport { createSource, fetchSource, removeSource } from '../adapters/news'\n\n//css\nimport styles from './ManageInstitution.module.css'\nimport backbutton from '../images/backButton2.png';\nexport default function ManageNews(props) {\n    //context\n    let { tokenVerified, isLogin, userRole } = useContext(MainContext)\n\n\n    //states\n    const [option, setoption] = useState(null)\n    const [value, setvalue] = useState({ sourceName: '', sourceLink: '' })\n    const [showClear, setshowClear] = useState(false)\n    const [sources, setsources] = useState(null)\n    const [removesources, setremovesources] = useState([])\n\n    console.log(removesources)\n    //effects\n    useEffect(() => {\n        if (value.sourceName === '' &&\n            value.sourceLink === '') {\n            setshowClear(false)\n        }\n    }, [value])\n\n    useEffect(async () => {\n        if (option === \"view\") {\n            let data = await fetchSource()\n            if (data) {\n                setsources(data)\n                console.log(sources)\n            }\n        }\n\n    }, [option, removesources, setremovesources])\n\n    //handleChange\n    const handleChange = (event) => {\n        setshowClear(true)\n        setvalue({ ...value, [event.target.name]: event.target.value })\n    }\n    const clearFields = () => {\n        setvalue({ sourceName: '', sourceLink: '', statusTxt: '' })\n\n    }\n\n    //handleCheckbox\n    const handleRemoveCheckbox = (event) => {\n        let { target: { checked, name } } = event\n        if (checked) {\n            setremovesources([...removesources, name])\n        }\n        else if (!checked) {\n            setremovesources(\n                removesources.filter(\n                    (ele) => {\n                        return ele !== name\n                    }\n                )\n            )\n\n        }\n        console.log(`${event.target.name} : ${event.target.checked} `)\n    }\n    //handleOnsubmit\n    const handleAddOnsubmit = async () => {\n        try {\n            let { sourceName, sourceLink } = value\n            let { status } = await createSource({ sourceName, sourceLink })\n            setvalue({ statusTxt: status })\n            console.log(status)\n        }\n        catch (err) {\n            console.log(err)\n        }\n\n\n    }\n    const handleRemoveSubmit = async () => {\n        try {\n            if (removesources) {\n                let data = await removeSource({ removesources })\n                setremovesources([])\n                console.log(data)\n\n            }\n        }\n        catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    if ((tokenVerified === true || isLogin === true) && userRole === \"admin\") {\n        if (option === null) {\n            return (\n                <div className={styles.blockbuttoncontainer}>\n                    <button className={styles.block1} onClick={() => setoption(\"add\")}>Add Source</button>\n                    <button className={styles.block2} onClick={() => setoption(\"view\")}>View Sources</button>\n                </div>\n            )\n        }\n        else if (option === \"add\") {\n            return (\n                <div className={styles.container}>\n                    {/*<button onClick={() => setoption(null)}>Back</button>*/}\n                    <img className={styles.backbutton} src={backbutton} alt=\"back\" onClick={() => { setoption(null) }} />\n\n                    <div>\n                        <label>Source Name</label>\n                        <input name=\"sourceName\" type=\"text\" value={value.sourceName}\n                            onChange={(event) => handleChange(event)}></input>\n\n\n                        <label>Source Link</label>\n                        <textarea name=\"sourceLink\" value={value.sourceLink}\n                            onChange={(event) => handleChange(event)}></textarea>\n\n                        {showClear ?\n                            (<button onClick={() => {\n                                clearFields()\n                            }}>clear Fields</button>) : null\n                        }\n\n                        <input type=\"submit\" onClick={(event) => handleAddOnsubmit(event)}></input>\n                        <h4>{value.statusTxt}</h4>\n\n                    </div>\n                </div>\n            )\n        }\n        else if (option === \"view\") {\n            return (\n                <div className={styles.container}>\n                    {/*<button onClick={() => setoption(null)}>Back</button>*/}\n                    <img className={styles.backbutton} src={backbutton} alt=\"back\" onClick={() => { setoption(null) }} />\n                    <table className={styles.institutionsTbl} >\n                        <tbody >\n                            <tr>\n                                <th  >Source name</th >\n                                <th >Source link</th>\n                                <th >Mark to remove</th>\n\n                            </tr>\n                            {sources ? sources.map((source) => {\n                                return (\n                                    <tr key={source._id}>\n                                        <td>{source.sourceName}</td>\n                                        <td>{source.sourceLink}</td>\n                                        <td style={{ textAlign: \"center\" }}>\n                                            <input name={source._id} type=\"checkbox\" onChange={(event) => handleRemoveCheckbox(event)}></input>\n                                        </td>\n                                    </tr>)\n                            }) : null}\n                        </tbody>\n                    </table>\n                    <button className={styles.savechanges} onClick={() => handleRemoveSubmit()}>Save changes</button>\n\n                </div>\n            )\n        }\n    }\n    else {\n        return (<div>Invalid entry</div>)\n    }\n}","/Users/bijish/projects/miniProject/frontend/src/pages/Patients.js",["239","240"],"import React, { useContext, useState, useEffect } from 'react';\nimport { MainContext } from '../context/maincontext'\nimport styles from './patient.module.css'\nimport { fetchAllPatients } from '../adapters/managepatients'\n\nfunction Patients() {\n    let { tokenVerified, isLogin } = useContext(MainContext)\n\n    const [patients, setpatients] = useState(null)\n    useEffect(async () => {\n        let data = await fetchAllPatients()\n        if (data) {\n            setpatients(data)\n            console.log(patients)\n        }\n    }, [])\n    if (tokenVerified === true || isLogin === true) {\n        return (\n            <div className={styles.container}>\n                <table className={styles.patientsTbl} >\n                    <tbody >\n                        <tr>\n                            <th  >Sl.No</th >\n                            <th >Patient Name</th>\n\n                        </tr>\n                        {patients ? patients.map((patient, id) => {\n                            return (\n                                <tr key={patient._id}>\n                                    <td>{id + 1}</td>\n                                    <td>{patient.username}</td>\n\n                                </tr>)\n                        }) : null}\n                    </tbody>\n                </table>\n\n            </div>\n        )\n    }\n    else {\n        return (<div>Invalid entry</div>)\n    }\n}\nexport default Patients;\n","/Users/bijish/projects/miniProject/frontend/src/pages/MedicalCentres.js",["241","242"],"import React, { useContext, useState, useEffect } from 'react';\nimport { MainContext } from '../context/maincontext'\nimport styles from './patient.module.css'\nimport { fetchInstitutionsNearby } from '../adapters/manageinstitution'\n\nfunction MedicalCentres() {\n    let { tokenVerified, isLogin } = useContext(MainContext)\n\n    const [institutions, setinstitutions] = useState(null)\n    useEffect(async () => {\n        let data = await fetchInstitutionsNearby()\n        if (data) {\n            setinstitutions(data)\n            console.log(institutions)\n        }\n    }, [])\n    if (tokenVerified === true || isLogin === true) {\n        return (\n            <div className={styles.container}>\n                <table className={styles.patientsTbl} >\n                    <tbody >\n                        <tr>\n                            <th  >Sl.No</th >\n                            <th >Institution</th>\n                            <th >Contact Info</th>\n\n\n                        </tr>\n                        {institutions ? institutions.map((institute, id) => {\n                            return (\n                                <tr key={institute._id}>\n                                    <td>{id + 1}</td>\n                                    <td>{institute.instituteName}</td>\n                                    <td>{institute.contactInfo}</td>\n                                </tr>)\n                        }) : null}\n                    </tbody>\n                </table>\n\n            </div>\n        )\n    }\n    else {\n        return (<div>Invalid entry</div>)\n    }\n}\nexport default MedicalCentres;\n","/Users/bijish/projects/miniProject/frontend/src/pages/Contacts.js",["243","244"],"import React, { useContext, useState, useEffect } from 'react';\nimport { MainContext } from '../context/maincontext'\nimport styles from './patient.module.css'\nimport { fetchContacts } from '../adapters/managecontacts'\nimport { Loader } from '../components/loader/Loader'\nfunction Contacts() {\n    let { tokenVerified, isLogin } = useContext(MainContext)\n\n    const [contacts, setcontacts] = useState(null)\n    useEffect(async () => {\n        let data = await fetchContacts()\n        if (data) {\n            setcontacts(data)\n            console.log(contacts)\n        }\n    }, [])\n    if (tokenVerified === true || isLogin === true) {\n        return contacts ? (\n            <div className={styles.container}>\n                <table className={styles.patientsTbl} >\n                    <tbody >\n                        <tr>\n                            <th  >Sl.No</th >\n                            <th >Contact name</th>\n                            <th >Contact details</th>\n\n\n                        </tr>\n                        {contacts ? contacts.map((contact, id) => {\n                            return (\n                                <tr key={contact._id}>\n                                    <td>{id + 1}</td>\n                                    <td>{contact.ContactName}</td>\n                                    <td>{contact.ContactNumber}</td>\n\n                                </tr>)\n                        }) : null}\n                    </tbody>\n                </table>\n\n            </div>\n        ) : <Loader centerit={false} />\n    }\n    else {\n        return (<div>Invalid entry</div>)\n    }\n}\nexport default Contacts;\n","/Users/bijish/projects/miniProject/frontend/src/components/loader/Loader.js",[],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":5,"column":19,"nodeType":"251","messageId":"252","endLine":5,"endColumn":30},{"ruleId":"249","severity":1,"message":"253","line":11,"column":26,"nodeType":"251","messageId":"252","endLine":11,"endColumn":34},{"ruleId":"254","severity":1,"message":"255","line":24,"column":21,"nodeType":"256","endLine":24,"endColumn":108},{"ruleId":"249","severity":1,"message":"257","line":11,"column":8,"nodeType":"251","messageId":"252","endLine":11,"endColumn":14},{"ruleId":"249","severity":1,"message":"258","line":16,"column":9,"nodeType":"251","messageId":"252","endLine":16,"endColumn":22},{"ruleId":"259","severity":1,"message":"260","line":24,"column":13,"nodeType":"261","endLine":37,"endColumn":4},{"ruleId":"259","severity":1,"message":"262","line":37,"column":5,"nodeType":"263","endLine":37,"endColumn":7,"suggestions":"264"},{"ruleId":"259","severity":1,"message":"265","line":55,"column":5,"nodeType":"263","endLine":55,"endColumn":7,"suggestions":"266"},{"ruleId":"259","severity":1,"message":"267","line":18,"column":32,"nodeType":"263","endLine":18,"endColumn":79},{"ruleId":"249","severity":1,"message":"268","line":7,"column":7,"nodeType":"251","messageId":"252","endLine":7,"endColumn":13},{"ruleId":"259","severity":1,"message":"269","line":25,"column":8,"nodeType":"263","endLine":25,"endColumn":24,"suggestions":"270"},{"ruleId":"259","severity":1,"message":"271","line":40,"column":5,"nodeType":"263","endLine":40,"endColumn":20,"suggestions":"272"},{"ruleId":"259","severity":1,"message":"260","line":50,"column":15,"nodeType":"261","endLine":66,"endColumn":6},{"ruleId":"259","severity":1,"message":"273","line":66,"column":8,"nodeType":"263","endLine":66,"endColumn":10,"suggestions":"274"},{"ruleId":"259","severity":1,"message":"260","line":67,"column":15,"nodeType":"261","endLine":75,"endColumn":6},{"ruleId":"259","severity":1,"message":"275","line":75,"column":8,"nodeType":"263","endLine":75,"endColumn":31,"suggestions":"276"},{"ruleId":"259","severity":1,"message":"260","line":25,"column":15,"nodeType":"261","endLine":49,"endColumn":6},{"ruleId":"259","severity":1,"message":"277","line":49,"column":8,"nodeType":"263","endLine":49,"endColumn":59,"suggestions":"278"},{"ruleId":"259","severity":1,"message":"260","line":36,"column":15,"nodeType":"261","endLine":44,"endColumn":6},{"ruleId":"259","severity":1,"message":"260","line":37,"column":15,"nodeType":"261","endLine":69,"endColumn":6},{"ruleId":"259","severity":1,"message":"279","line":69,"column":8,"nodeType":"263","endLine":69,"endColumn":10,"suggestions":"280"},{"ruleId":"259","severity":1,"message":"260","line":14,"column":15,"nodeType":"261","endLine":21,"endColumn":6},{"ruleId":"249","severity":1,"message":"281","line":1,"column":50,"nodeType":"251","messageId":"252","endLine":1,"endColumn":56},{"ruleId":"259","severity":1,"message":"260","line":34,"column":15,"nodeType":"261","endLine":65,"endColumn":6},{"ruleId":"259","severity":1,"message":"282","line":65,"column":8,"nodeType":"263","endLine":65,"endColumn":10,"suggestions":"283"},{"ruleId":"259","severity":1,"message":"260","line":38,"column":15,"nodeType":"261","endLine":47,"endColumn":6},{"ruleId":"259","severity":1,"message":"284","line":47,"column":8,"nodeType":"263","endLine":47,"endColumn":51,"suggestions":"285"},{"ruleId":"259","severity":1,"message":"260","line":34,"column":15,"nodeType":"261","endLine":43,"endColumn":6},{"ruleId":"259","severity":1,"message":"286","line":43,"column":8,"nodeType":"263","endLine":43,"endColumn":49,"suggestions":"287"},{"ruleId":"259","severity":1,"message":"260","line":10,"column":15,"nodeType":"261","endLine":16,"endColumn":6},{"ruleId":"259","severity":1,"message":"282","line":16,"column":8,"nodeType":"263","endLine":16,"endColumn":10,"suggestions":"288"},{"ruleId":"259","severity":1,"message":"260","line":10,"column":15,"nodeType":"261","endLine":16,"endColumn":6},{"ruleId":"259","severity":1,"message":"279","line":16,"column":8,"nodeType":"263","endLine":16,"endColumn":10,"suggestions":"289"},{"ruleId":"259","severity":1,"message":"260","line":10,"column":15,"nodeType":"261","endLine":16,"endColumn":6},{"ruleId":"259","severity":1,"message":"284","line":16,"column":8,"nodeType":"263","endLine":16,"endColumn":10,"suggestions":"290"},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'GoChecklist' is defined but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'styles' is defined but never used.","'selectCountry' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'setCountries'. Either include it or remove the dependency array.","ArrayExpression",["293"],"React Hook useEffect has missing dependencies: 'setcountrySummary' and 'setglobalSummary'. Either include them or remove the dependency array.",["294"],"Assignments to the 'position' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'styles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["295"],"React Hook useEffect has a missing dependency: 'setcountryHistoric'. Either include it or remove the dependency array.",["296"],"React Hook useEffect has missing dependencies: 'handleToken', 'settokenVerified', 'setuserRole', and 'setusername'. Either include them or remove the dependency array.",["297"],"React Hook useEffect has a missing dependency: 'settimeoutID'. Either include it or remove the dependency array.",["298"],"React Hook useEffect has missing dependencies: 'basicUsers' and 'patientUsers'. Either include them or remove the dependency array.",["299"],"React Hook useEffect has a missing dependency: 'institutions'. Either include it or remove the dependency array.",["300"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'patients'. Either include it or remove the dependency array.",["301"],"React Hook useEffect has a missing dependency: 'contacts'. Either include it or remove the dependency array.",["302"],"React Hook useEffect has a missing dependency: 'sources'. Either include it or remove the dependency array.",["303"],["304"],["305"],["306"],"no-global-assign","no-unsafe-negation",{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"323","fix":"329"},{"desc":"321","fix":"330"},{"desc":"331","fix":"332"},"Update the dependencies array to be: [setCountries]",{"range":"333","text":"334"},"Update the dependencies array to be: [setcountrySummary, setglobalSummary]",{"range":"335","text":"336"},"Update the dependencies array to be: [age, fever, RF, props]",{"range":"337","text":"338"},"Update the dependencies array to be: [selectCountry, setcountryHistoric]",{"range":"339","text":"340"},"Update the dependencies array to be: [handleToken, settokenVerified, setuserRole, setusername]",{"range":"341","text":"342"},"Update the dependencies array to be: [userRole, setuserRole, settimeoutID]",{"range":"343","text":"344"},"Update the dependencies array to be: [setoption, option, setbasicUsers, setpatientUsers, basicUsers, patientUsers]",{"range":"345","text":"346"},"Update the dependencies array to be: [institutions]",{"range":"347","text":"348"},"Update the dependencies array to be: [patients]",{"range":"349","text":"350"},"Update the dependencies array to be: [option, setremovecontacts, removecontacts, contacts]",{"range":"351","text":"352"},"Update the dependencies array to be: [option, removesources, setremovesources, sources]",{"range":"353","text":"354"},{"range":"355","text":"350"},{"range":"356","text":"348"},"Update the dependencies array to be: [contacts]",{"range":"357","text":"358"},[823,825],"[setCountries]",[1211,1213],"[setcountrySummary, setglobalSummary]",[673,689],"[age, fever, RF, props]",[1211,1226],"[selectCountry, setcountryHistoric]",[1877,1879],"[handleToken, settokenVerified, setuserRole, setusername]",[2133,2156],"[userRole, setuserRole, settimeoutID]",[1317,1368],"[setoption, option, setbasicUsers, setpatientUsers, basicUsers, patientUsers]",[1776,1778],"[institutions]",[1677,1679],"[patients]",[1279,1322],"[option, setremovecontacts, removecontacts, contacts]",[1189,1230],"[option, removesources, setremovesources, sources]",[530,532],[569,571],[576,578],"[contacts]"]